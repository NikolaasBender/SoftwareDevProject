// Code generated by go-bindata.
// sources:
// templates/about.html
// templates/index.html
// templates/navigation_bar.html
// templates/second_view.html
// templates/third_view.html
// static/MainPage.html
// static/css_notes.txt
// static/navigation_bar.css
// static/style.css
// DO NOT EDIT!

package homeMade

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAboutHtml = []byte(`<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Golang HTML Server</title>

        <link rel="stylesheet" href="../static/style.css">
        <link rel="stylesheet" href="../static/navigation_bar.css">

        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">

        <!-- additional CSS -->

        <!-- fonts -->
        <link href='https://fonts.googleapis.com/css?family=Raleway' rel='stylesheet'>
        <!-- icons -->
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    </head>
    <body>
        <div class="wrapper">
          <div class="container-fluid" id="main">
            <div class="nav fixed-top" id="topbar">
              <div class="navbar-brand">
                <h1 style="font-weight:900;">
                  Project
                  <span style="font-weight:700;color:#adadad;">
                    Name
                  </span>
                  <i class='far fa-comment-alt' style='font-size:1.0em;color:#fff;'></i>
                </h1>
              </div>
              <ul class="nav navbar-nav ml-auto" id="user-pills">
                <li>
                  <button type="button" class="btn btn-signup" id="signup">Sign Up</button>
                  <button type="button" class="btn btn-login" id="login">Log In</button>
                </li>
              </ul>
            </div>
            <div data-jarallax data-speed="0.2" class="jarallax">
              <img class="jarallax-img" src="../assets/mountain_1.jpg" alt="">
                <div class="container-fluid" id="paralax-text">
                  <h1>
                    What if work was...
                    <span>
                      Fun?
                    </span>
                  </h1>
                </div>
                <div class="container-fluid">
                  <h2>
                    <i class='fas fa-chevron-down' style='font-size:2.0em;color:#FF2D36'></i>
                  </h2>
                </div>
            </div>
            <div class="container-fluid" id="body">
              <h1>Well now it is.</h1>
              <div class="container-fluid" id="body-text">
                <h2><small> Welcome to [ProjectName]</small></h2>
                <hr style="border-width: 2px; border-color: #FF2D36;"></hr>
                <p>
                  [ProjectName] is the human centered project management system
                  where we bring
                   <span style="font-weight:bold;color:#FF2D36;">you</span>
                   closer than ever to your day-to-day tasks. With speed and
                   personalization unmatched by the rest of the industry.
                </p>
              </div>
            </div>
            <div data-jarallax data-speed="0.2" class="jarallax">
              <img class="jarallax-img" src="../assets/building_1.jpg" alt="">
                <div class="container-fluid" id="paralax-text">
                  <h1>Test Text</h1>
                </div>
            </div>
            <div class="container-fluid" id="body">
              <h1>Test Text</h1>
            </div>
          </div>
        </div>
        <footer>
          <div class="container-fluid" id="Footer">
            <div class="container" style="padding:30px;">
              <h1>Test Text</h1>
              <ul class="list-unstyled components">
                <li>Ben Singer</li>
                <li>Cooper Simpson</li>
                <li>Iva Majeticova</li>
                <li>Ngozi Nwankwo</li>
                <li>Nick Bender</li>
                <li>John Gossett</li>
              </ul>
              <p>2019</p>
            </div>
          </div>
        </footer>
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1" crossorigin="anonymous"></script>

        <!-- additional js -->
        <script src="https://unpkg.com/jarallax@1.10/dist/jarallax.min.js"></script>
    </body>
</html>
`)

func templatesAboutHtmlBytes() ([]byte, error) {
	return _templatesAboutHtml, nil
}

func templatesAboutHtml() (*asset, error) {
	bytes, err := templatesAboutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/about.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIndexHtml = []byte(`<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Golang HTML Server</title>

        <link rel="stylesheet" href="../static/style.css">
        <link rel="stylesheet" href="../static/navigation_bar.css">

        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">

        <!-- additional CSS -->

        <!-- fonts -->
        <link href='https://fonts.googleapis.com/css?family=Raleway' rel='stylesheet'>
        <!-- icons -->
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    </head>
    <body>
        <div class="wrapper">
          <div class="container-fluid" id="main">
            <div class="nav fixed-top" id="topbar">
              <div class="navbar-brand">
                <h1 style="font-weight:900;">
                  Project
                  <span style="font-weight:700;color:#adadad;">
                    Name
                  </span>
                  <i class='far fa-comment-alt' style='font-size:1.0em;color:#fff;'></i>
                </h1>
              </div>
              <ul class="nav navbar-nav ml-auto" id="user-pills">
                <li>
                  <button type="button" class="btn btn-signup" id="signup">Sign Up</button>
                  <button type="button" class="btn btn-login" id="login">Log In</button>
                </li>
              </ul>
            </div>
            <div data-jarallax data-speed="0.2" class="jarallax">
              <img class="jarallax-img" src="../assets/mountain_1.jpg" alt="">
                <div class="container-fluid" id="paralax-text">
                  <h1>
                    What if work was...
                    <span>
                      Fun?
                    </span>
                  </h1>
                </div>
                <div class="container-fluid">
                  <h2>
                    <i class='fas fa-chevron-down' style='font-size:2.0em;color:#FF2D36'></i>
                  </h2>
                </div>
            </div>
            <div class="container-fluid" id="body">
              <h1>Well now it is.</h1>
              <div class="container-fluid" id="body-text">
                <h2><small> Welcome to [ProjectName]</small></h2>
                <hr style="border-width: 2px; border-color: #FF2D36;"></hr>
                <p>
                  [ProjectName] is the human centered project management system
                  where we bring
                   <span style="font-weight:bold;color:#FF2D36;">you</span>
                   closer than ever to your day-to-day tasks. With speed and
                   personalization unmatched by the rest of the industry.
                </p>
              </div>
            </div>
            <div data-jarallax data-speed="0.2" class="jarallax">
              <img class="jarallax-img" src="../assets/building_1.jpg" alt="">
                <div class="container-fluid" id="paralax-text">
                  <h1>Test Text</h1>
                </div>
            </div>
            <div class="container-fluid" id="body">
              <h1>Test Text</h1>
            </div>
          </div>
        </div>
        <footer>
          <div class="container-fluid" id="Footer">
            <div class="container" style="padding:30px;">
              <h1>Test Text</h1>
              <ul class="list-unstyled components">
                <li>Ben Singer</li>
                <li>Cooper Simpson</li>
                <li>Iva Majeticova</li>
                <li>Ngozi Nwankwo</li>
                <li>Nick Bender</li>
                <li>John Gossett</li>
              </ul>
              <p>2019</p>
            </div>
          </div>
        </footer>
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1" crossorigin="anonymous"></script>

        <!-- additional js -->
        <script src="https://unpkg.com/jarallax@1.10/dist/jarallax.min.js"></script>
    </body>
</html>
`)

func templatesIndexHtmlBytes() ([]byte, error) {
	return _templatesIndexHtml, nil
}

func templatesIndexHtml() (*asset, error) {
	bytes, err := templatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/index.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNavigation_barHtml = []byte(`<!-- Navigation Bar -->
<nav class="navbar navbar-light bg-light">
    <div class="container">
        <span class="navbar-brand">CO-Lab</span>

        <ul class="nav justify-content-end">
            <li class="nav-item">
                <a id="homeNav" class="nav-link" href="/">NotHome</a>
            </li>
            <li class="nav-item">
                <a id="secondNav" class="nav-link" href="/second">Second</a>
            </li>
            <li class="nav-item">
                <a id="thirdNav" class="nav-link" href="/third/2">Third</a>
            </li>
            <li class="nav-item">
                <a id="loginNav" class="nav-link" href="/login">Third</a>
            </li>
            <li class="nav-item">
                <a id="aboutNav" class="nav-link" href="/about">About</a>
            </li>
        </ul>
    </div>
</nav>`)

func templatesNavigation_barHtmlBytes() ([]byte, error) {
	return _templatesNavigation_barHtml, nil
}

func templatesNavigation_barHtml() (*asset, error) {
	bytes, err := templatesNavigation_barHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/navigation_bar.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSecond_viewHtml = []byte(`<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Golang HTML Server</title>

        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">

        <link rel="stylesheet" href="/static/style.css">
        <link rel="stylesheet" href="/static/navigation_bar.css">
    </head>
    <body>
        <div class="container">
            {{.NavigationBar}}

            <h1>Another View</h1>
            <h2>- Content Goes Here -</h2>
        </div>
    </body>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1" crossorigin="anonymous"></script>
</html>`)

func templatesSecond_viewHtmlBytes() ([]byte, error) {
	return _templatesSecond_viewHtml, nil
}

func templatesSecond_viewHtml() (*asset, error) {
	bytes, err := templatesSecond_viewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/second_view.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesThird_viewHtml = []byte(`<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Golang HTML Server</title>

        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">

        <link rel="stylesheet" href="/static/style.css">
        <link rel="stylesheet" href="/static/navigation_bar.css">
        <link rel="stylesheet" href="/static/third_view.css">
    </head>
    <body>
        <div class="container">
            {{.NavigationBar}}

            <h1>Rendering Data</h1>
            <h4>This page takes the integer passed in and determines if it is odd or even</h4>
            <div class="result-box">
                {{if .StringQuery}}
                    <h2 class="result-underlined">You didn't enter an integer. This is what was entered:</h2>
                    <h3>{{.StringQuery}}</h3>
                {{else}}
                    <h2 class="result-underlined">The number entered is:</h2>
                    <h3>{{.Number}}</h3>
                    <h2 class="result-underlined">This number is:</h2>
                    <h3>{{.Number | formatOddOrEven}}</h3>
                {{end}}
            </div>
        </div>
    </body>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1" crossorigin="anonymous"></script>
</html>`)

func templatesThird_viewHtmlBytes() ([]byte, error) {
	return _templatesThird_viewHtml, nil
}

func templatesThird_viewHtml() (*asset, error) {
	bytes, err := templatesThird_viewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/third_view.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticMainpageHtml = []byte(`<!DOCTYPE html>
<html>
	<body>

		<h1>Header</h1>
			<p>Paragraph.</p>
			<p>swiggity swooty</p>
	</body>
</html>`)

func staticMainpageHtmlBytes() ([]byte, error) {
	return _staticMainpageHtml, nil
}

func staticMainpageHtml() (*asset, error) {
	bytes, err := staticMainpageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/MainPage.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticCss_notesTxt = []byte(`https://www.w3schools.com/w3css/tryw3css_templates_social.htm

https://www.w3schools.com/w3css/tryw3css_templates_analytics.htm`)

func staticCss_notesTxtBytes() ([]byte, error) {
	return _staticCss_notesTxt, nil
}

func staticCss_notesTxt() (*asset, error) {
	bytes, err := staticCss_notesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/css_notes.txt", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticNavigation_barCss = []byte(``)

func staticNavigation_barCssBytes() ([]byte, error) {
	return _staticNavigation_barCss, nil
}

func staticNavigation_barCss() (*asset, error) {
	bytes, err := staticNavigation_barCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/navigation_bar.css", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticStyleCss = []byte(`/* HOME OF OUR UNIFIED CSS*/
.wrapper {
    display: flex;
    width: 100%;
    align-items: stretch;
}

.container-fluid{
	padding: 0px;
	border: 0px;
}

.btn-signup {
  background-color: #fff !important;
  color: #FF2D36 !important;
  border-radius: 0 !important;
}

.btn-signup:hover {
  background-color: #FF2D36 !important;
  color: #fff !important;
}

.btn-login {
  background-color: #FF2D36 !important;
  border-color: #fff !important;
  border-width: medium !important;
  border-radius: 0 !important;
  color: #fff;
}

.btn-login:hover {
  border-width: 0 !important;
}

#main {
	font-family: "Raleway";
	text-align: center;
	padding: 0px;
}

#topbar {
	padding: 30px;
	background: #FF2D36;
	color: #fff;
	border-bottom: 20px solid #fff;
}

#user-pills {
  align-items: center;
	justify-content: center;
}

#signup {
  height: 50px;
  width: 160px;
  font-size: 1.5em;
}

#login {
  height: 50px;
  width: 160px;
  font-size: 1.5em;
}

#paralax-text {
	font-family: "Raleway";
	display: flex;
	align-items: center;
	justify-content: center;
	height: 91vh;
	color: #fff;
	text-align: left;
}

#paralax-text h1{
  padding-top: 135px;
	font-size: 6.0em;
	font-weight: 400;
	line-height: 50px;
}

#paralax-text h1 span{
	font-weight: 900;
	font-style: italic;
	color: #FF2D36;
}

#body {
	min-height: 700px;
	padding: 50px;
	background: #fff;
}

#body h1 {
	font-size: 7.5em;
	font-weight: 900;
	color: #FF2D36;
}

#body-text {
	background: #fff;
	padding: 30px;
	color: #7f7f7f;
}

#body-text h2 {
	font-size: 4.0em;
	font-weight: 200;
}

#body-text p {
	padding-left: 30px;
	padding-right: 30px;
	font-size: 2.0em;
	color: #212121;
}

#Footer {
	text-align: center;
	height:35vh;
	background: #FF2D36;
	color: #fff;
}
`)

func staticStyleCssBytes() ([]byte, error) {
	return _staticStyleCss, nil
}

func staticStyleCss() (*asset, error) {
	bytes, err := staticStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/style.css", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/about.html": templatesAboutHtml,
	"templates/index.html": templatesIndexHtml,
	"templates/navigation_bar.html": templatesNavigation_barHtml,
	"templates/second_view.html": templatesSecond_viewHtml,
	"templates/third_view.html": templatesThird_viewHtml,
	"static/MainPage.html": staticMainpageHtml,
	"static/css_notes.txt": staticCss_notesTxt,
	"static/navigation_bar.css": staticNavigation_barCss,
	"static/style.css": staticStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"MainPage.html": &bintree{staticMainpageHtml, map[string]*bintree{}},
		"css_notes.txt": &bintree{staticCss_notesTxt, map[string]*bintree{}},
		"navigation_bar.css": &bintree{staticNavigation_barCss, map[string]*bintree{}},
		"style.css": &bintree{staticStyleCss, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"about.html": &bintree{templatesAboutHtml, map[string]*bintree{}},
		"index.html": &bintree{templatesIndexHtml, map[string]*bintree{}},
		"navigation_bar.html": &bintree{templatesNavigation_barHtml, map[string]*bintree{}},
		"second_view.html": &bintree{templatesSecond_viewHtml, map[string]*bintree{}},
		"third_view.html": &bintree{templatesThird_viewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

